# Test GraphQL enum type support
# Enums should be represented as Modules with fields for each enum value

# Test enum field access - Status enum values should be accessible as fields
assert { Status.ACTIVE == Status.ACTIVE }
assert { Status.INACTIVE == Status.INACTIVE }
assert { Status.PENDING == Status.PENDING }
assert { Status.ARCHIVED == Status.ARCHIVED }

# Test that different enum values are NOT equal
assert { Status.ACTIVE != Status.INACTIVE }
assert { Status.ACTIVE != Status.PENDING }
assert { Status.PENDING != Status.ARCHIVED }

# Test querying enum values from GraphQL
pub statusValue = status
assert { statusValue == Status.ACTIVE }

# Test enum field on a type
let statuses = users.{status}
pub john = statuses[0]
assert { john.status == Status.ACTIVE }
assert { john.status != Status.PENDING }

pub jane = statuses[1]
assert { jane.status == Status.PENDING }
assert { jane.status != Status.ACTIVE }

print("Enum tests passed!")
