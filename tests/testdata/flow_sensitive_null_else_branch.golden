2 inference errors:

Error 1:
[1m[31mError:[0m [1m[31mError:[0m FuncDecl(testBothBranches).Infer body: [1m[31mError:[0m Unification Fail: String! ~ String cannot be unified
  [2m[34m--> errors/flow_sensitive_null_else_branch.dang:12:7[0m
 [2m    |[0m
 [2m 10 |       # This should fail - maybeString is still nullable (String) in the else branch[0m
 [2m 11 |       # where we know it's null, so we can't use it as non-null[0m
 [2m[34m[1m 12 | [0m      maybeString + "!"
[2m             [31m^^^^^^^^^^^^^^^^^[0m
 [2m 13 |     }[0m
 [2m 14 |   }[0m
 [2m    |[0m

  [2m[34m--> errors/flow_sensitive_null_else_branch.dang:5:3[0m
 [2m    |[0m
 [2m  3 |   let maybeString: String = null[0m
 [2m  4 | [0m
 [2m[34m[1m  5 | [0m  pub testBothBranches: String! {
[2m         [31m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m
 [2m  6 |     if maybeString != null {[0m
 [2m  7 |       # This should work - maybeString is refined to String! in the then branch[0m
 [2m    |[0m

  [2m[34m--> errors/flow_sensitive_null_else_branch.dang:2:1[0m
 [2m    |[0m
 [2m  1 | # Test flow-sensitive null checking error behavior[0m
 [2m[34m[1m  2 | [0mtype TestType {
[2m       [31m^^^^^^^^^^^^^^^[0m
 [2m  3 |   let maybeString: String = null[0m
 [2m  4 | [0m
 [2m    |[0m


Error 2:
[1m[31mError:[0m Select.Infer: expected NonNullType or Env, got hm.TypeVariable
  [2m[34m--> errors/flow_sensitive_null_else_branch.dang:18:7[0m
 [2m    |[0m
 [2m 16 | [0m
 [2m 17 | let testObj = TestType[0m
 [2m[34m[1m 18 | [0mprint(testObj.testBothBranches)
[2m             [31m^^^^^^^^^^^^^^^^^^^^^^^^[0m
 [2m 19 | [0m
 [2m    |[0m

