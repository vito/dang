type Query {
  hello(name: String!): String!
  users: [User!]!
  user(id: String!): User
  serverInfo: ServerInfo!
  posts(authorId: String, limit: Int): [Post!]!
  userProfile(userId: String, includeStats: Boolean): UserProfile
  postTitles: [String!]!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(id: String!, input: UpdateUserInput!): User
  deleteUser(id: String!): Boolean!
}

type User {
  id: String!
  name: String!
  email: String!
  age: Int
  posts: [Post!]!
}

type Post {
  id: String!
  title: String!
  content: String!
  author: User!
  createdAt: String!
}

type ServerInfo {
  version: String!
  platform: String!
  uptime: String!
  totalUsers: Int!
  totalPosts: Int!
}

type UserProfile {
  user: User!
  joinedDate: String!
  lastActivity: String!
  postCount: Int
  averagePostLength: Float
  bio: String
}

input CreateUserInput {
  name: String!
  email: String!
  age: Int
}

input UpdateUserInput {
  name: String
  email: String
  age: Int
}