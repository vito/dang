# local binding
let hello = 42

hello # test: gd => ┃hello = 42

# function definition
pub addNums(x: Int!, y: Int!): Int! {
  x + y # test: ^gd => pub addNums(┃x: Int!, y: Int!): Int! {
}

addNums # test: ^gd => pub ┃addNums(x: Int!, y: Int!): Int! {

# nested scope
let outer = 1
pub innerFn: Int! {
  let inner = 2
  outer + inner # test: ^gd => let ┃outer = 1
}
innerFn # test: ^gd => pub ┃innerFn: Int! {

# type/class definition
type Person {
  pub name: String!
  pub age: Int!
}

Person # test: ^gd => type ┃Person {
